{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","key","document","addEventListener","event","setState","this","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAUaA,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,IAAK,IAHT,uDAME,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEL,YAAY,EAAMC,IAAKG,EAAMH,WARnD,oBAYE,WACE,MAA4BK,KAAKP,MAAzBC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,IAEpB,OACE,qBAAKM,UAAU,MAAf,SACIP,EAAD,kCAAqEC,GAAvD,gCAjBvB,GAAyBO,IAAMC,W,MCL/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.1ade76f1.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n};\n\ntype State = {\n  pressedKey: boolean,\n  key: string,\n};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    pressedKey: false,\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: true, key: event.key });\n    });\n  }\n\n  render() {\n    const { pressedKey, key } = this.state;\n\n    return (\n      <div className=\"App\">\n        {!pressedKey ? 'Nothing was pressed yet' : `The last pressed key is ${key}`}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}